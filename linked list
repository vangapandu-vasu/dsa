linked list
here one node points to other nodes.
linked list is variable size.
data is stored in non-contiguous data.

insertion:
add node in between point the provious and next to it 
time complexity for insertion is 0(1) constant time.
time complexity for searching is 0(n).

key point:
for insertion deletion like manipulation use linked list over arraylist
for searching use arraylist over linked list 

in node we have data and pointer.
data stores data and pointer points to next node.
the first node is head and last is tail;
